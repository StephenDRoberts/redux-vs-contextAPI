{"ast":null,"code":"import _slicedToArray from \"/Users/stephenroberts/CDrive/snippets/reduxcontextapi/reduxExample/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/stephenroberts/CDrive/snippets/reduxcontextapi/reduxExample/src/AddItem.js\";\nimport React, { useState } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { handleAddItem } from './redux/modules/itemReducer.js';\n\nconst AddItem = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        displayModal = _useState2[0],\n        updateDisplayModal = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        input = _useState4[0],\n        updateInput = _useState4[1];\n\n  const handleAdd = () => {\n    updateDisplayModal(false);\n    props.dispatch(handleAddItem({\n      name: input\n    }));\n    updateInput('');\n  };\n\n  const handleClose = () => {\n    updateDisplayModal(false);\n    updateInput('');\n  };\n\n  const handleChange = event => {\n    updateInput(event.target.value);\n  };\n\n  const handleDisplayModal = () => {\n    updateDisplayModal(true);\n  };\n\n  const renderModal = () => {\n    return React.createElement(Modal, {\n      onHide: () => {\n        handleClose();\n      },\n      show: displayModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Add Item\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"What item would you like to add?\"), React.createElement(\"input\", {\n      placeholder: \"Type in item here...\",\n      onChange: event => handleChange(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: () => handleClose(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Close\"), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      onClick: () => handleAdd(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Add Item\")));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, renderModal(), React.createElement(Button, {\n    variant: \"success\",\n    onClick: () => handleDisplayModal(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-plus-circle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = state => {\n  return {\n    data: state.itemReducer.data\n  };\n};\n\nexport default connect(mapStateToProps)(AddItem);","map":{"version":3,"sources":["/Users/stephenroberts/CDrive/snippets/reduxcontextapi/reduxExample/src/AddItem.js"],"names":["React","useState","Button","Modal","connect","handleAddItem","AddItem","props","displayModal","updateDisplayModal","input","updateInput","handleAdd","dispatch","name","handleClose","handleChange","event","target","value","handleDisplayModal","renderModal","mapStateToProps","state","data","itemReducer"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { handleAddItem } from './redux/modules/itemReducer.js';\n\nconst AddItem = (props) => {\n\n    const [displayModal, updateDisplayModal] = useState(false);\n    const [input, updateInput] = useState('');\n\n    const handleAdd = () => {\n        updateDisplayModal(false);\n        props.dispatch(handleAddItem({ name: input }));\n        updateInput('');\n    };\n\n    const handleClose = () => {\n        updateDisplayModal(false);\n        updateInput('');\n    };\n\n    const handleChange = (event) => {\n        updateInput(event.target.value);\n    };\n\n    const handleDisplayModal = () => {\n        updateDisplayModal(true);\n    };\n\n    const renderModal = () => {\n        return (\n            <Modal \n                onHide={()=>{handleClose()}}\n                show={displayModal} \n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Add Item</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <p>What item would you like to add?</p>\n                    <input placeholder=\"Type in item here...\" onChange={(event)=>handleChange(event)}/>\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick = {()=>handleClose()}>Close</Button>\n                    <Button variant=\"primary\" type=\"submit\" onClick={()=>handleAdd()}>Add Item</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    };\n\n    return (\n        <div>\n            {renderModal()}\n            <Button variant=\"success\" onClick={()=>handleDisplayModal()}>\n                <i className=\"fas fa-plus-circle\"></i>\n            </Button>\n        </div>);\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        data: state.itemReducer.data\n    };\n};\nexport default connect(mapStateToProps)(AddItem);"]},"metadata":{},"sourceType":"module"}